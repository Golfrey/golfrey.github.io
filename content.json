{"pages":[{"title":"About","text":"","link":"/about/index.html"},{"title":"Project","text":"","link":"/project/index.html"},{"title":"Series","text":"","link":"/series/index.html"},{"title":"Tags","text":"","link":"/tags/index.html"}],"posts":[{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2021/09/11/hello-world/"},{"title":"article title","text":"","link":"/2021/09/11/article-title/"},{"title":"new new article","text":"Hello Shabi!","link":"/2021/10/06/new-new-article/"},{"title":"test new post","text":"","link":"/2021/10/06/test-new-post/"},{"title":"hexo blog 101","text":"Make Sure you get Node.js environmentnode =v &amp; npm -v to make sure the environment is ok. Insall Gitgit --version to make sure the environment is ok. Make sure you can connect to github ok. ssh -T git@github.com should give you the right outcome. See git &amp; github 101 to see more about git. Install Hexonpm i Hexo-cli -g to install Hexo. hexo -v to check the environment ok. Publish new articlehexo new [layout] &lt;title&gt; post is the default layout. Change Post layoutYou can change files in scaffolds to change the default layout of post and draft. 12345678910---title: {{ title }}tags:categories:description:date: {{ date }}---&lt;!-- more --&gt;&lt;!-- markdownlint-disable MD041 MD002--&gt; Change Hexo ThemeDownload/Checkout theme into you projectTake vexo as an example 12345cd your-hexo-foldergit clone https://github.com/yanm1ng/hexo-theme-vexo.git themes/vexocp -R themes/vexo/_source/* source/ Update project _config.yml theme config1themes: vexo Modify theme themes/vexo/_config.yml with your own infoUpdate Version12cd themes/vexogit pull Backup Source Code to GithubWe need to create a branch, called like hexo for example on our github page repo. We can git clone the repository to our computer and track the branch hexo. For example, git branch -b hexo , do things we like, then git push origin hexo.","link":"/2021/10/06/hexo-blog-101/"},{"title":"git &amp; github 101","text":"","link":"/2021/10/06/git-github-101/"},{"title":"Bit Manipulation","text":"Basics Set Union A|B Set intersection A&amp;B Set subtraction A &amp; ~B Set negation All_BITS ^ A || ~A Set bit A |= 1 &lt;&lt; bit Clear bit A &amp;= ~(1 &lt;&lt; bit) Test bit (A &amp; 1 &lt;&lt; bit) != 0 Extract last bit A &amp; -A or A &amp; ~(A - 1) Remove last bit A &amp; (A - 1) Get all 1-bits ~0 Tricks Sum of two Integers 123int getSum(int a, int b) { return b == 0 ? a : getSum(a^b, (a&amp;b) &lt;&lt; 1);} ContributionThanks to LHearen. A summary: how to use bit manipulation to solve problems easily and efficiently","link":"/2021/10/07/Bit-Manipulation/"},{"title":"Control-flow Hijacking","text":"MakeWe can use like make file_dbg to gdb something. We can use like make file_run to run something. If we look into this, we can see something like -m32 -no-pie -fno-pic . This is settings to make sure we see eveything same, to make sure the experiment go right. Socket connectWe can use command nc . If we want to connect port 7777 in lab machine faclab03, we can use nc faclab03 7777 Disassemble code outside GDB1objdump -d file Disassemble code inside GDBIf we want to disassemble fuction like main in GDB, we can use code below: 1disassemble main We can use single disassemble to see the current fuction’s code. Setup a breakpoint in GDBWe can find out the address of the fuction we want to look. For example, 0x08044959d, we can use code below: 1b *0x08044959d si is step into; ni is next instruction. So we use ni if we want to escape inside of the fuction. Show proc mappings in GDB1info proc mappings Assembly Language UsageCallcall does two things, it stores next command address into stack, and push the address into eip. X commandx command examines the data located in memory at address. 1[x]/&lt;number&gt;&lt;format&gt;&lt;unit_size&gt; &lt;address&gt; number optionally indicates that several contiguous elements, beginning at address, should be examined. This is very useful for examining the contents of an array. By default, this argument is 1. format indicates how data should be printed. In most cases, this is the same character that you would use in a call to printf(). One exception is the format i, which prints an instruction rather than a decimal integer. unit_size indicates the size of the data to examine. It can be [b]ytes, [h]alfwords (2 bytes), [w]ords, or [g]iant words. By default, this is bytes, which is perfect for examining instructions. For example, we can use x/a $esp to check the address of $esp We can see 0x80495a2 Since the machine we use is small endian, we can use x/4xb $esp to see 0xa2 0x95 0x04 0x08 Something Constantapi never change. We can use man command to see the input number of the command. Details in the processThink about %ebp &amp; %espSo we may encounter these two command. 123push %ebpmov %esp,%ebpsub $0x218,%esp So you backup %ebpfirst, then we use %espto give %ebp as base pointer. Then we can allocate stack by changing the value of %esp. Function ParametersWe can find the first parameter on the top of the stack. For example, if we do like read(cfd, buf, BUF_LEN), then we use x/3a $esp then we will see like 10x4 oxbffffbbc 0x400 each one point to cfd, buf and BUF_LEN. Function ReturnsWhen some call return, it will always store the return value into $eax Nop Instructionnop instruction doesn’t do anything. It is for align purpose. Leave InstructionIt does two things. First, it copy $ebp to $esp. Second, it set $ebpto its back value. What the ebp saysMinus $ebp always tellsl us what is in the stack. Add $ebp tells us the fuction parameter and the return address of the fuction.","link":"/2021/10/07/Control-flow-Hijacking/"}],"tags":[{"name":"settings","slug":"settings","link":"/tags/settings/"},{"name":"101 series","slug":"101-series","link":"/tags/101-series/"},{"name":"algorithm","slug":"algorithm","link":"/tags/algorithm/"},{"name":"csci 1650","slug":"csci-1650","link":"/tags/csci-1650/"},{"name":"class","slug":"class","link":"/tags/class/"}],"categories":[{"name":"101","slug":"101","link":"/categories/101/"},{"name":"leetcode","slug":"leetcode","link":"/categories/leetcode/"},{"name":"notes","slug":"notes","link":"/categories/notes/"}]}